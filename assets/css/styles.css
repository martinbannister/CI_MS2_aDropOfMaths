@import url('https://fonts.googleapis.com/css2?family=Schoolbell&family=Short+Stack&display=swap');

/* REFERENCE: Using CSS custom properties to
    create changable theme
    https://www.sitepoint.com/css-theming-custom-properties-javascript/ */
:root {
    /* Children's theme */
    --problem_bg_colour: hsl(209, 100%, 50%);
    --footer_bg_colour: hsl(60, 100%, 50%);
}

:root[theme='adult'] {
    /* Grown Up theme */
    --problem_bg_colour: hsl(209, 40%, 46%);
    --footer_bg_colour: hsl(209, 30%, 53%);
    --bubble_colour:hsl(209, 100%, 53%);
    --bubble_text_colour:hsl(209,100%,100%);
}

.overlay {
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
}

#settings {
    margin: auto;
    background-color: #fff;
    border-radius: 15px;
    height: 60vh;
    width: 30vw;
    padding: 10px;
}

/* REFERENCE: Custom radio buttons technique derived from:
    https://www.w3schools.com/howto/howto_css_custom_checkbox.asp */
/* CUSTOM RADIO GROUP */
/* child selectors used over general decsendent selectors 
    for performance considerations */

/* Flex display for contents of each label */
.calc_type_label {
    display: flex;
    justify-content: space-around;
}

/* Hide the browser's default radio button */
/* copied from w3schools how to referenced above */
.calc_type_label > input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }

/* Sets flexbox details and size for container
    of custom radio buttons */
#calc_type_group {
    display: flex;
    justify-content: space-around;
    /* % used as unit for proportion of parent container */
    width: 95%;
}

/* styles the spans contained within labels
    to create circles with text centered
    horizontally and vertically */
.custom_radio {
    display:flex;
    height: 4vw;
    width: 4vw;
    border-radius: 50%;
    background-color: hsl(209, 50%, 50%);
    justify-content: center;
    align-items: center;
    font-size: 3vw;
    font-weight: 700;
}

/* hover effect for the spans 
    uses the same hue but varies lightness */
.custom_radio:hover {
    background-color: hsl(209, 50%, 80%);
}

/* changes the colour of the selected
    custom radio button */
/* uses the General Sibling Selector to
    select siblings of the currently checked
    radio button with the class .custom_radio
    (custom styled spans) */
.calc_type_label > input:checked ~ .custom_radio {
    background-color: hsl(209, 50%, 30%);
    color: #fff;
}

/* / CUSTOM RADIO GROUP */